#ifndef SHAREDRANDOMIZERCLASS_H
#define SHAREDRANDOMIZERCLASS_H

#include <nlohmann/json.hpp>
#include <QMap>
#include <QVector>
#include <QString>
#include <QSet>
#include <QDebug>
#include <QFile>
#include <QDir>
#include <QDirIterator>
#include <flatbuffers/flatbuffers.h>
#include <flatbuffers/verifier.h>
#include <TrinitySceneObject_generated.h>
#include <QProcess>
#include <QStringListModel>
#include <QSet>
#include <QDebug>
#include <QRandomGenerator>
#include <QPair>
#include <QtConcurrent>
#include <QCryptographicHash>
#include <QDateTime>
#include <QFuture>
#include <QMessageBox>
#include <QCoreApplication>
#include <QApplication>

using json = nlohmann::json;

/*
    normal = normal
    kakutou = fightning
    hikou = flying
    doku = poison
    jimen = ground
    iwa = rock
    mushi = bug
    ghost = ghost
    hagane = steel
    honoo = fire
    mizu = water
    kusa = grass
    denki = electric
    esper = psychic
    koori = ice
    dragon = dragon
    aku = dark
    fairy = fairy (yousei everywhere else)
    niji = stellar
*/

class sharedRandomizerClass{
    public:
        // Global Structs
        QRandomGenerator randNum;
        struct allowedPokemonLimiter{
            QList<bool> gens = {true, true, true,
                                true, true, true,
                                true, true, true};
            QList<bool> genLegends = {true, true, true,
                                      true, true, true,
                                      true, true, true};
            bool stage1 = true;
            bool stage2 = true;
            bool stage3 = true;
            bool singleStage = true;
            bool megas = true;
            bool paradox = true;
            bool ultraBeast = true;

            // toString() method
            QString toString() const {
                QStringList gensList;
                for (bool gen : gens) {
                    gensList.append(gen ? "true" : "false");
                }
                QStringList genLegendsList;
                for (bool gen : genLegends) {
                    genLegendsList.append(gen ? "true" : "false");
                }

                return QString("Gens: [%1], Legends: [%8], Stage1: %2, Stage2: %3, Stage3: %4, SingleStage: %5, Megas: %9, UltraBeast: %7, Paradox: %6")
                    .arg(gensList.join(", "))
                    .arg(stage1 ? "true" : "false")
                    .arg(stage2 ? "true" : "false")
                    .arg(stage3 ? "true" : "false")
                    .arg(singleStage ? "true" : "false")
                    .arg(paradox ? "true" : "false")
                    .arg(ultraBeast ? "true" : "false")
                    .arg(genLegendsList.join(", "))
                    .arg(megas ? "true" : "false");
            }
        };

        struct trainerSettings{
            bool randomize = false;
            bool allowTera = false;
            bool randomizeTeras = false;
            bool singlesOrDoubles = false;
            bool allDoubles = false;
            QList <int> randomizedIndex;

            bool allowShinies = false;
            bool force6Pokemon = false;
            bool extraPokemon = false;
            bool forcePerfectIV = false;
            bool makeAISmart = false;

            allowedPokemonLimiter allowedPokemons;
        };

        // Uninitialized Data
        json pokemonPersonalData;
        json pokemonMapping;
        QList<int> allowedMoves;
        QList<int> bannedItems;
        QStringList pokeballNames;
        int totalFiles = 0;
        int maxGeneration = 9;
        int maxAllowedId = 1025;
        bool nationalDexMode = false; // Adding for future compatability for potential nationaldex mods
        QStringList pokemonInGame;
        QMap<int, QList<int>> bannedPokemon;
        QMap<QString, QList<int>> pokemonFormsIntsInGame;
        QMap<QString, QList<int>> selectedStarters = {
            {"", {0}},
        };

        /*
            1) All IDs are in national dex order
            2) List Includes national dex information
            3) Lists will be national lists (not fully national as of this github push)
        */

        QList<int> maxIdPerGeneration = {0, 151, 251, 386, 493, 649, 721, 809, 905, 1025};

        QList <QMap<QString, int>> exitAbilitiesPokemon = {
            {{"id", 0}, {"form", 0}},
        };

        QList <QMap<QString, int>> wonderGuardPokemon = {
            {{"id", 0}, {"form", 0}}
        };

        QList<int> pokemonFormsWithItems = {483, 484, 487, 493, 888, 889, 1017};

        QStringList maleOnlyPokemon = {
            "NidoranM",
            "Nidorino",
            "Nidoking",
            "Hitmonlee",
            "Hitmonchan",
            "Tauros",
            "Hitmontop",
            "Volbeat",
            "Mothim",
            "Gallade",
            "Throh",
            "Sawk",
            "Rufflet",
            "Braviary",
            "Impidimp",
            "Morgrem",
            "Grimmsnarl",
            "Tyrogue",
            "Latios",
            "Tornadus",
            "Thundurus",
            "Landorus",
            "Okidogi",
            "Munkidori",
            "Fezandipiti"
        };

        QStringList femaleOnlyPokemon = {
            "NidoranF",
            "Nidorina",
            "Nidoqueen",
            "Chansey",
            "Kangaskhan",
            "Jynx",
            "Miltank",
            "Blissey",
            "Illumise",
            "Wormadam",
            "Vespiquen",
            "Froslass",
            "Petilil",
            "Lilligant",
            "Vullaby",
            "Mandibuzz",
            "Flabébé",
            "Floette",
            "Florges",
            "Salazzle",
            "Bounsweet",
            "Steenee",
            "Tsareena",
            "Hatenna",
            "Hattrem",
            "Hatterene",
            "Milcery",
            "Alcremie",
            "Tinkatink",
            "Tinkatuff",
            "Tinkaton",
            "Smoochum",
            "Latias",
            "Happiny",
            "Cresselia",
            "Enamorus",
            "Ogerpon"
        };

        QStringList genderlessPokemon = {
            "Magnemite",
            "Magneton",
            "Voltorb",
            "Electrode",
            "Staryu",
            "Starmie",
            "Porygon",
            "Porygon2",
            "Shedinja",
            "Lunatone",
            "Solrock",
            "Baltoy",
            "Claydol",
            "Beldum",
            "Metang",
            "Metagross",
            "Bronzor",
            "Bronzong",
            "Magnezone",
            "Porygon-Z",
            "Rotom",
            "Phione",
            "Manaphy",
            "Klink",
            "Klang",
            "Klinklang",
            "Cryogonal",
            "Golett",
            "Golurk",
            "Carbink",
            "Minior",
            "Dhelmise",
            "Sinistea",
            "Polteageist",
            "Falinks",
            "Tandemaus",
            "Maushold",
            "Poltchageist",
            "Sinistcha",
            "Ditto",
            "Articuno",
            "Zapdos",
            "Moltres",
            "Mewtwo",
            "Mew",
            "Unown",
            "Raikou",
            "Entei",
            "Suicune",
            "Lugia",
            "Ho-oh",
            "Celebi",
            "Regirock",
            "Regice",
            "Registeel",
            "Kyogre",
            "Groudon",
            "Rayquaza",
            "Jirachi",
            "Deoxys",
            "Uxie",
            "Mesprit",
            "Azelf",
            "Dialga",
            "Palkia",
            "Regigigas",
            "Giratina",
            "Darkrai",
            "Shaymin",
            "Arceus",
            "Victini",
            "Cobalion",
            "Terrakion",
            "Virizion",
            "Reshiram",
            "Zekrom",
            "Kyurem",
            "Keldeo",
            "Meloetta",
            "Genesect",
            "Xerneas",
            "Yveltal",
            "Zygarde",
            "Diancie",
            "Hoopa",
            "Volcanion",
            "Type: Null",
            "Silvally",
            "Tapu Koko",
            "Tapu Lele",
            "Tapu Bulu",
            "Tapu Fini",
            "Cosmog",
            "Cosmoem",
            "Solgaleo",
            "Lunala",
            "Nihilego",
            "Buzzwole",
            "Pheromosa",
            "Xurkitree",
            "Celesteela",
            "Kartana",
            "Guzzlord",
            "Necrozma",
            "Magearna",
            "Marshadow",
            "Poipole",
            "Naganadel",
            "Stakataka",
            "Blacephalon",
            "Zeraora",
            "Meltan",
            "Melmetal",
            "Dracozolt",
            "Arctozolt",
            "Dracovish",
            "Arctovish",
            "Zacian",
            "Zamazenta",
            "Eternatus",
            "Zarude",
            "Regieleki",
            "Regidrago",
            "Glastrier",
            "Spectrier",
            "Calyrex",
            "Great Tusk",
            "Scream Tail",
            "Brute Bonnet",
            "Flutter Mane",
            "Slither Wing",
            "Sandy Shocks",
            "Iron Treads",
            "Iron Bundle",
            "Iron Hands",
            "Iron Jugulis",
            "Iron Moth",
            "Iron Thorns",
            "Gimmighoul",
            "Gholdengo",
            "Wo-Chien",
            "Chien-Pao",
            "Ting-Lu",
            "Chi-Yu",
            "Roaring Moon",
            "Iron Valiant",
            "Koraidon",
            "Miraidon",
            "Walking Wake",
            "Iron Leaves",
            "Gouging Fire",
            "Raging Bolt",
            "Iron Boulder",
            "Iron Crown",
            "Pecharunt"
        };

        QStringList genderForms{
            "Meowstic",
            "Indeedee",
            "Oinkologne"
        };

        QMap<QString,QList<int>> formsMaleOnly{
            {"Pikachu", {1,2,3,4,5,6,7,9}},
            {"Greninja", {1}},
            {"Ursaluna", {1}}
        };

        QMap<QString, QList<int>> formsFemaleOnly{

        };

        QStringList teraTypes = {
            "NORMAL", "KAKUTOU", "HIKOU", "DOKU", "JIMEN", "IWA", "MUSHI", "GHOST",
            "HAGANE", "HONOO", "MIZU", "KUSA", "DENKI", "ESPER", "KOORI", "DRAGON",
            "AKU", "FAIRY", "NIJI"
        }; // NIJI == STELLAR TERA TYPE

        QMap<QString, QStringList> pokeballDevNames = {
            {"Poke Ball",{"MONSUTAABOORU", "ITEMID_MONSUTAABOORU"}},
            {"Great Ball",{"SUUPAABOORU", "ITEMID_SUUPAABOORU"}},
            {"Ultra Ball",{"HAIPAABOORU", "ITEMID_HAIPAABOORU"}},
            {"Master Ball",{"MASUTAABOORU", "ITEMID_MASUTAABOORU"}},
            {"Beast Ball",{"URUTORABOORU", "ITEMID_URUTORABOORU"}},
            {"Cherish Ball", {"PURESYASUBOORU", "ITEMID_PURESYASUBOORU"}},
            {"Luxury Ball",{"GOOZYASUBOORU", "ITEMID_GOOZYASUBOORU"}},
            {"Timer Ball",{"TAIMAABOORU", "ITEMID_TAIMAABOORU"}},
            {"Net Ball",{"NETTOBOORU", "ITEMID_NETTOBOORU"}},
            {"Nest Ball",{"NESUTOBOORU", "ITEMID_NESUTOBOORU"}},
            {"Repeat Ball",{"RIPIITOBOORU", "ITEMID_RIPIITOBOORU"}},
            {"Dive Ball",{"DAIBUBOORU", "ITEMID_DAIBUBOORU"}},
            {"Dusk Ball",{"DAAKUBOORU", "ITEMID_DAAKUBOORU"}},
            {"Heal Ball", {"HIIRUBOORU", "ITEMID_HIIRUBOORU"}},
            {"Quick Ball",{"KUIKKUBOORU", "ITEMID_KUIKKUBOORU"}},
            {"Premier Ball",{"PUREMIABOORU", "ITEMID_PUREMIABOORU"}},
            {"Safari Ball", {"SAFARIBOORU", "ITEMID_SAFARIBOORU"}},
            {"Fast Ball", {"SUPIIDOBOORU", "ITEMID_SUPIIDOBOORU"}},
            {"Level Ball",{"REBERUBOORU", "ITEMID_REBERUBOORU"}},
            {"Lure Ball", {"RUAABOORU", "ITEMID_RUAABOORU"}},
            {"Heavy Ball",{"HEBIIBOORU", "ITEMID_HEBIIBOORU"}},
            {"Love Ball", {"RABURABUBOORU", "ITEMID_RABURABUBOORU"}},
            {"Friend Ball",{"HURENDOBOORU", "ITEMID_HURENDOBOORU"}},
            {"Moon Ball", {"MUUNBOORU", "ITEMID_MUUNBOORU"}},
            {"Sport Ball",{"KONPEBOORU", "ITEMID_KONPEBOORU"}},
            {"Dream Ball",{"DORIIMUBOORU", "ITEMID_DORIIMUBOORU"}}
        };

        QMap<int, QList<int>> gen1_legends = {
            {144, {0}}, {145, {0}}, {146, {0}}, {150, {0, 1, 2}}, {151, {0}}
        };

        QMap<int, QList<int>> gen2_legends = {
            {243, {0}}, {244, {0}}, {245, {0}}, {249, {0}}, {250, {0}},
            {251, {0}}
        };

        QMap<int, QList<int>> gen3_legends = {
            {377, {0}}, {378, {0}}, {379, {0}}, {380, {0, 1}}, {381, {0, 1}},
            {382, {0, 1}}, {383, {0, 1}}, {384, {0, 1}}, {385, {0}}, {386, {0, 1, 2, 3}}
        };

        QMap<int, QList<int>> gen4_legends = {
            {480, {0}}, {481, {0}}, {482, {0}}, {483, {0, 1}}, {484, {0, 1}},
            {485, {0}}, {486, {0}}, {487, {0, 1}}, {488, {0}}, {489, {0}},
            {490, {0}}, {491, {0}}, {492, {0, 1}}, {493, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}}
        };

        QMap<int, QList<int>> gen5_legends = {
            {494, {0}}, {638, {0}}, {639, {0}}, {640, {0}}, {641, {0, 1}},
            {642, {0, 1}}, {643, {0}}, {644, {0}}, {645, {0, 1}}, {646, {0, 1, 2}},
            {647, {0, 1}}, {648, {0, 1}}, {649, {0, 1, 2, 3, 4}}
        };

        QMap<int, QList<int>> gen6_legends = {
            {716, {0, 1}}, {717, {0}}, {718, {0, 1, 2, 3, 4}}, {719, {0, 1}}, {720, {0, 1}}, {721, {0}}
        };

        QMap<int, QList<int>> gen7_legends = {
            {772, {0}}, {773, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}},
            {785, {0}}, {786, {0}}, {787, {0}}, {788, {0}},
            {789, {0}}, {790, {0}}, {791, {0}}, {792, {0}}, {800, {0, 1, 2, 3}}, {801, {0, 1}},
            {802, {0}}, {807, {0}}, {808, {0}}, {809, {0}}
        };

        QMap<int, QList<int>> UB = {
            {793, {0}}, {794, {0}}, {795, {0}}, {796, {0}}, {797, {0}},
            {798, {0}}, {799, {0}}, {803, {0}}, {804, {0}}, {805, {0}}, {806, {0}}
        };

        QMap<int, QList<int>> gen8_legends = {
            {888, {0, 1}}, {889, {0, 1}}, {890, {0, 1}}, {891, {0}}, {892, {0}},
            {893, {0, 1}}, {894, {0}}, {895, {0}}, {896, {0}}, {897, {0}},
            {898, {0, 1, 2}}, {905, {0}}, {144, {1}}, {145, {1}}, {146, {1}},
        };

        QMap<int, QList<int>> gigantamax; // Empty for now

        QMap<int, QList<int>> gen9_legends = {
            {1001, {0}}, {1002, {0}}, {1003, {0}}, {1004, {0}}, {1007, {0, 1, 2, 3, 4}},
            {1008, {0, 1, 2, 3, 4}}, {1014, {0}}, {1015, {0}},  {1016, {0}},
            {1017, {0, 1, 2, 3, 4, 5, 6, 7}}, {1024, {0, 1, 2}}, {1025, {0}}
        }; // Koraidon and Miraidon are considered legends and not paradoxes

        QMap<int, QList<int>> paradox = {
            {984, {0}}, {985, {0}}, {986, {0}}, {987, {0}}, {988, {0}},
            {989, {0}}, {990, {0}}, {991, {0}}, {992, {0}}, {993, {0}},
            {994, {0}}, {995, {0}}, {1005, {0}}, {1006, {0}}, {1009, {0}},
            {1010, {0}}, {1020, {0}}, {1021, {0}}, {1022, {0}}, {1023, {0}}
        };

        QMap<int, QList<int>> set_tera_type_pokemon = {
            {1017, {0, 1, 2, 3, 4, 5, 6, 7}}, {1024, {0, 1, 2}}
        };

        QMap<int, QList<int>> megas = {
            {3, {1}}, {6, {1, 2}}, {9, {1}}, {15, {1}}, {18, {1}}, {65, {1}}, {80, {1}}, {94, {1}}, {115, {1}}, {127, {1}}, {130, {1}},
            {142, {1}}, {150, {1, 2}}, // End G1
            {181, {1}}, {208, {1}}, {212, {1}}, {214, {1}}, {229, {1}}, {248, {1}}, // End G2
            {254, {1}}, {257, {1}}, {260, {1}}, {282, {1}}, {302, {1}}, {303, {1}}, {306, {1}}, {308, {1}}, {310, {1}}, {319, {1}},
            {323, {1}}, {3, {1}}, {334, {1}}, {354, {1}}, {359, {1}}, {362, {1}}, {373, {1}}, {376, {1}}, {380, {1}}, {381, {1}},
            {382, {1}}, {383, {1}}, {384, {1}}, // End G3
            {428, {1}}, {445, {1}}, {448, {1}}, {460, {1}}, {475, {1}}, // End G4
            {531, {1}}, // End G5
            {719, {1}}, // End G6
        };

        QMap<int, QList<int>> gen1 = {
            {1, {0}}, {2, {0}}, {3, {0, 1}}, {4, {0}}, {5, {0}}, {6, {0, 1, 2}}, {7, {0}}, {8, {0}}, {9, {0, 1}}, {10, {0}},
            {11, {0}}, {12, {0}}, {13, {0}}, {14, {0}}, {15, {0, 1}}, {16, {0}}, {17, {0}}, {18, {0, 1}}, {19, {0, 1}}, {20, {0, 1}},
            {21, {0}}, {22, {0}}, {23, {0}}, {24, {0}}, {25, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}}, {26, {0, 1}}, {27, {0, 1}}, {28, {0, 1}}, {29, {0}}, {30, {0}},
            {31, {0}}, {32, {0}}, {33, {0}}, {34, {0}}, {35, {0}}, {36, {0}}, {37, {0, 1}}, {38, {0, 1}}, {39, {0}}, {40, {0}},
            {41, {0}}, {42, {0}}, {43, {0}}, {44, {0}}, {45, {0}}, {46, {0}}, {47, {0}}, {48, {0}}, {49, {0}}, {50, {0, 1}},
            {51, {0, 1}}, {52, {0, 1, 2}}, {53, {0, 1}}, {54, {0}}, {55, {0}}, {56, {0}}, {57, {0}}, {58, {0, 1}}, {59, {0, 1}}, {60, {0}},
            {61, {0}}, {62, {0}}, {63, {0}}, {64, {0}}, {65, {0, 1}}, {66, {0}}, {67, {0}}, {68, {0}}, {69, {0}}, {70, {0}},
            {71, {0}}, {72, {0}}, {73, {0}}, {74, {0, 1}}, {75, {0, 1}}, {76, {0, 1}}, {77, {0, 1}}, {78, {0, 1}}, {79, {0, 1}}, {80, {0, 1, 2}},
            {81, {0}}, {82, {0}}, {83, {0, 1}}, {84, {0}}, {85, {0}}, {86, {0}}, {87, {0}}, {88, {0, 1}}, {89, {0, 1}}, {90, {0}},
            {91, {0}}, {92, {0}}, {93, {0}}, {94, {0, 1}}, {95, {0}}, {96, {0}}, {97, {0}}, {98, {0}}, {99, {0}}, {100, {0, 1}},
            {101, {0, 1}}, {102, {0}}, {103, {0, 1}}, {104, {0}}, {105, {0, 1}}, {106, {0}}, {107, {0}}, {108, {0}}, {109, {0}}, {110, {0, 1}},
            {111, {0}}, {112, {0}}, {113, {0}}, {114, {0}}, {115, {0, 1}}, {116, {0}}, {117, {0}}, {118, {0}}, {119, {0}}, {120, {0}},
            {121, {0}}, {122, {0, 1}}, {123, {0}}, {124, {0}}, {125, {0}}, {126, {0}}, {127, {0, 1}}, {128, {0, 1, 2, 3}}, {129, {0}}, {130, {0, 1}},
            {131, {0}}, {132, {0}}, {133, {0, 1}}, {134, {0}}, {135, {0}}, {136, {0}}, {137, {0}}, {138, {0}}, {139, {0}}, {140, {0}},
            {141, {0}}, {142, {0, 1}}, {143, {0}}, {144, {0, 1}}, {145, {0, 1}}, {146, {0, 1}}, {147, {0}}, {148, {0}}, {149, {0}}, {150, {0, 1, 2}},
            {151, {0}}
        };

        QMap<int, QList<int>> gen2 = {
            {152, {0}}, {153, {0}}, {154, {0}}, {155, {0}}, {156, {0}}, {157, {0, 1}}, {158, {0}}, {159, {0}}, {160, {0}}, {161, {0}},
            {162, {0}}, {163, {0}}, {164, {0}}, {165, {0}}, {166, {0}}, {167, {0}}, {168, {0}}, {169, {0}}, {170, {0}}, {171, {0}},
            {172, {0}}, {173, {0}}, {174, {0}}, {175, {0}}, {176, {0}}, {177, {0}}, {178, {0}}, {179, {0}}, {180, {0}}, {181, {0, 1}},
            {182, {0}}, {183, {0}}, {184, {0}}, {185, {0}}, {186, {0}}, {187, {0}}, {188, {0}}, {189, {0}}, {190, {0}}, {191, {0}},
            {192, {0}}, {193, {0}}, {194, {0, 1}}, {195, {0}}, {196, {0}}, {197, {0}}, {198, {0}}, {199, {0, 1}}, {200, {0}}, {201, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}},
            {202, {0}}, {203, {0}}, {204, {0}}, {205, {0}}, {206, {0}}, {207, {0}}, {208, {0, 1}}, {209, {0}}, {210, {0}}, {211, {0, 1}},
            {212, {0, 1}}, {213, {0}}, {214, {0, 1}}, {215, {0, 1}}, {216, {0}}, {217, {0}}, {218, {0}}, {219, {0}}, {220, {0}}, {221, {0}},
            {222, {0, 1}}, {223, {0}}, {224, {0}}, {225, {0}}, {226, {0}}, {227, {0}}, {228, {0}}, {229, {0, 1}}, {230, {0}}, {231, {0}},
            {232, {0}}, {233, {0}}, {234, {0}}, {235, {0}}, {236, {0}}, {237, {0}}, {238, {0}}, {239, {0}}, {240, {0}}, {241, {0}},
            {242, {0}}, {243, {0}}, {244, {0}}, {245, {0}}, {246, {0}}, {247, {0}}, {248, {0, 1}}, {249, {0}}, {250, {0}}, {251, {0}}
        };

        QMap<int, QList<int>> gen3 = {
            {252, {0}}, {253, {0}}, {254, {0, 1}}, {255, {0}}, {256, {0}}, {257, {0, 1}}, {258, {0}}, {259, {0}}, {260, {0, 1}}, {261, {0}},
            {262, {0}}, {263, {0, 1}}, {264, {0, 1}}, {265, {0}}, {266, {0}}, {267, {0}}, {268, {0}}, {269, {0}}, {270, {0}}, {271, {0}},
            {272, {0}}, {273, {0}}, {274, {0}}, {275, {0}}, {276, {0}}, {277, {0}}, {278, {0}}, {279, {0}}, {280, {0}}, {281, {0}},
            {282, {0, 1}}, {283, {0}}, {284, {0}}, {285, {0}}, {286, {0}}, {287, {0}}, {288, {0}}, {289, {0}}, {290, {0}}, {291, {0}},
            {292, {0}}, {293, {0}}, {294, {0}}, {295, {0}}, {296, {0}}, {297, {0}}, {298, {0}}, {299, {0}}, {300, {0}}, {301, {0}},
            {302, {0, 1}}, {303, {0, 1}}, {304, {0}}, {305, {0}}, {306, {0, 1}}, {307, {0}}, {308, {0, 1}}, {309, {0}}, {310, {0, 1}}, {311, {0}},
            {312, {0}}, {313, {0}}, {314, {0}}, {315, {0}}, {316, {0}}, {317, {0}}, {318, {0}}, {319, {0, 1}}, {320, {0}}, {321, {0}},
            {322, {0}}, {323, {0, 1}}, {324, {0}}, {325, {0}}, {326, {0}}, {327, {0}}, {328, {0}}, {329, {0}}, {330, {0}}, {331, {0}},
            {332, {0}}, {333, {0}}, {334, {0, 1}}, {335, {0}}, {336, {0}}, {337, {0}}, {338, {0}}, {339, {0}}, {340, {0}}, {341, {0}},
            {342, {0}}, {343, {0}}, {344, {0}}, {345, {0}}, {346, {0}}, {347, {0}}, {348, {0}}, {349, {0}}, {350, {0}}, {351, {0, 1, 2, 3}},
            {352, {0}}, {353, {0}}, {354, {0, 1}}, {355, {0}}, {356, {0}}, {357, {0}}, {358, {0}}, {359, {0, 1}}, {360, {0}}, {361, {0}},
            {362, {0, 1}}, {363, {0}}, {364, {0}}, {365, {0}}, {366, {0}}, {367, {0}}, {368, {0}}, {369, {0}}, {370, {0}}, {371, {0}},
            {372, {0}}, {373, {0, 1}}, {374, {0}}, {375, {0}}, {376, {0, 1}}, {377, {0}}, {378, {0}}, {379, {0}}, {380, {0, 1}}, {381, {0, 1}},
            {382, {0, 1}}, {383, {0, 1}}, {384, {0, 1}}, {385, {0}}, {386, {0, 1, 2, 3}}
        };

        QMap<int, QList<int>> gen4 = {
            {387, {0}}, {388, {0}}, {389, {0}}, {390, {0}}, {391, {0}}, {392, {0}}, {393, {0}}, {394, {0}}, {395, {0}}, {396, {0}},
            {397, {0}}, {398, {0}}, {399, {0}}, {400, {0}}, {401, {0}}, {402, {0}}, {403, {0}}, {404, {0}}, {405, {0}}, {406, {0}},
            {407, {0}}, {408, {0}}, {409, {0}}, {410, {0}}, {411, {0}}, {412, {0, 1, 2}}, {413, {0, 1, 2}}, {414, {0, 1, 2}}, {415, {0}}, {416, {0}},
            {417, {0}}, {418, {0}}, {419, {0}}, {420, {0}}, {421, {0, 1}}, {422, {0, 1}}, {423, {0, 1}}, {424, {0}}, {425, {0}}, {426, {0}},
            {427, {0}}, {428, {0, 1}}, {429, {0}}, {430, {0}}, {431, {0}}, {432, {0}}, {433, {0}}, {434, {0}}, {435, {0}}, {436, {0}},
            {437, {0}}, {438, {0}}, {439, {0}}, {440, {0}}, {441, {0}}, {442, {0}}, {443, {0}}, {444, {0}}, {445, {0, 1}}, {446, {0}},
            {447, {0}}, {448, {0, 1}}, {449, {0}}, {450, {0}}, {451, {0}}, {452, {0}}, {453, {0}}, {454, {0}}, {455, {0}}, {456, {0}},
            {457, {0}}, {458, {0}}, {459, {0}}, {460, {0, 1}}, {461, {0}}, {462, {0}}, {463, {0}}, {464, {0}}, {465, {0}}, {466, {0}},
            {467, {0}}, {468, {0}}, {469, {0}}, {470, {0}}, {471, {0}}, {472, {0}}, {473, {0}}, {474, {0}}, {475, {0, 1}}, {476, {0}},
            {477, {0}}, {478, {0}}, {479, {0, 1, 2, 3, 4, 5}}, {480, {0}}, {481, {0}}, {482, {0}}, {483, {0, 1}}, {484, {0, 1}}, {485, {0}}, {486, {0}},
            {487, {0, 1}}, {488, {0}}, {489, {0}}, {490, {0}}, {491, {0}}, {492, {0, 1}}, {493, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}},
        };

        QMap<int, QList<int>> gen5 = {
            {494, {0}}, {495, {0}}, {496, {0}}, {497, {0}}, {498, {0}}, {499, {0}}, {500, {0}}, {501, {0}}, {502, {0}}, {503, {0, 1}},
            {504, {0}}, {505, {0}}, {506, {0}}, {507, {0}}, {508, {0}}, {509, {0}}, {510, {0}}, {511, {0}}, {512, {0}}, {513, {0}},
            {514, {0}}, {515, {0}}, {516, {0}}, {517, {0}}, {518, {0}}, {519, {0}}, {520, {0}}, {521, {0}}, {522, {0}}, {523, {0}},
            {524, {0}}, {525, {0}}, {526, {0}}, {527, {0}}, {528, {0}}, {529, {0}}, {530, {0}}, {531, {0, 1}}, {532, {0}}, {533, {0}},
            {534, {0}}, {535, {0}}, {536, {0}}, {537, {0}}, {538, {0}}, {539, {0}}, {540, {0}}, {541, {0}}, {542, {0}}, {543, {0}},
            {544, {0}}, {545, {0}}, {546, {0}}, {547, {0}}, {548, {0}}, {549, {0, 1}}, {550, {0, 1, 2}}, {551, {0}}, {552, {0}}, {553, {0}},
            {554, {0, 1}}, {555, {0, 1, 2, 3}}, {556, {0}}, {557, {0}}, {558, {0}}, {559, {0}}, {560, {0}}, {561, {0}}, {562, {0, 1}}, {563, {0}},
            {564, {0}}, {565, {0}}, {566, {0}}, {567, {0}}, {568, {0}}, {569, {0}}, {570, {0, 1}}, {571, {0, 1}}, {572, {0}}, {573, {0}},
            {574, {0}}, {575, {0}}, {576, {0}}, {577, {0}}, {578, {0}}, {579, {0}}, {580, {0}}, {581, {0}}, {582, {0}}, {583, {0}},
            {584, {0}}, {585, {0, 1, 2, 3}}, {586, {0, 1, 2, 3}}, {587, {0}}, {588, {0}}, {589, {0}}, {590, {0}}, {591, {0}}, {592, {0}}, {593, {0}},
            {594, {0}}, {595, {0}}, {596, {0}}, {597, {0}}, {598, {0}}, {599, {0}}, {600, {0}}, {601, {0}}, {602, {0}}, {603, {0}},
            {604, {0}}, {605, {0}}, {606, {0}}, {607, {0}}, {608, {0}}, {609, {0}}, {610, {0}}, {611, {0}}, {612, {0}}, {613, {0}},
            {614, {0}}, {615, {0}}, {616, {0}}, {617, {0}}, {618, {0, 1}}, {619, {0}}, {620, {0}}, {621, {0}}, {622, {0}}, {623, {0}},
            {624, {0}}, {625, {0}}, {626, {0}}, {627, {0}}, {628, {0, 1}}, {629, {0}}, {630, {0}}, {631, {0}}, {632, {0}}, {633, {0}},
            {634, {0}}, {635, {0}}, {636, {0}}, {637, {0}}, {638, {0}}, {639, {0}}, {640, {0}}, {641, {0, 1}}, {642, {0, 1}}, {643, {0}},
            {644, {0}}, {645, {0, 1}}, {646, {0, 1, 2}}, {647, {0, 1}}, {648, {0, 1}}, {649, {0, 1, 2, 3, 4}},
        };

        QMap<int, QList<int>> gen6 = {
            {650, {0}}, {651, {0}}, {652, {0}}, {653, {0}}, {654, {0}}, {655, {0}}, {656, {0}}, {657, {0}}, {658, {0, 1, 2}}, {659, {0}},
            {660, {0}}, {661, {0}}, {662, {0}}, {663, {0}}, {664, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}},
            {665, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}},
            {666, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}}, {667, {0}}, {668, {0}}, {669, {0, 1, 2, 3, 4}},
            {670, {0, 1, 2, 3, 4, 5}}, {671, {0, 1, 2, 3, 4}}, {672, {0}}, {673, {0}}, {674, {0}}, {675, {0}}, {676, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}},
            {677, {0}}, {678, {0, 1}}, {679, {0}},
            {680, {0}}, {681, {0, 1}}, {682, {0}}, {683, {0}}, {684, {0}}, {685, {0}}, {686, {0}}, {687, {0}}, {688, {0}}, {689, {0}},
            {690, {0}}, {691, {0}}, {692, {0}}, {693, {0}}, {694, {0}}, {695, {0}}, {696, {0}}, {697, {0}}, {698, {0}}, {699, {0}},
            {700, {0}}, {701, {0}}, {702, {0}}, {703, {0}}, {704, {0}}, {705, {0, 1}}, {706, {0, 1}}, {707, {0}}, {708, {0}}, {709, {0}},
            {710, {0, 1, 2, 3}}, {711, {0, 1, 2, 3}}, {712, {0}}, {713, {0, 1}}, {714, {0}}, {715, {0}}, {716, {0, 1}}, {717, {0}},
            {718, {0, 1, 2, 3, 4}}, {719, {0, 1}},
            {720, {0, 1}}, {721, {0}},
        };

        QMap<int, QList<int>> gen7 = {
            {722, {0}}, {723, {0}}, {724, {0, 1}}, {725, {0}}, {726, {0}}, {727, {0}}, {728, {0}}, {729, {0}}, {730, {0}}, {731, {0}},
            {732, {0}}, {733, {0}}, {734, {0}}, {735, {0}}, {736, {0}}, {737, {0}}, {738, {0}}, {739, {0}}, {740, {0}}, {741, {0, 1, 2, 3}},
            {742, {0}}, {743, {0}}, {744, {0, 1}}, {745, {0, 1, 2}}, {746, {0, 1}}, {747, {0}}, {748, {0}}, {749, {0}}, {750, {0}}, {751, {0}},
            {752, {0}}, {753, {0}}, {754, {0}}, {755, {0}}, {756, {0}}, {757, {0}}, {758, {0}}, {759, {0}}, {760, {0}}, {761, {0}},
            {762, {0}}, {763, {0}}, {764, {0}}, {765, {0}}, {766, {0}}, {767, {0}}, {768, {0}}, {769, {0}}, {770, {0}}, {771, {0}},
            {772, {0}}, {773, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}}, {774, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}},
            {775, {0}}, {776, {0}}, {777, {0}}, {778, {0, 1}}, {779, {0}}, {780, {0}}, {781, {0}},
            {782, {0}}, {783, {0}}, {784, {0}}, {785, {0}}, {786, {0}}, {787, {0}}, {788, {0}}, {789, {0}}, {790, {0}}, {791, {0}},
            {792, {0}}, {793, {0}}, {794, {0}}, {795, {0}}, {796, {0}}, {797, {0}}, {798, {0}}, {799, {0}}, {800, {0, 1, 2, 3}}, {801, {0, 1}},
            {802, {0}}, {803, {0}}, {804, {0}}, {805, {0}}, {806, {0}}, {807, {0}}, {808, {0}}, {809, {0}},
        };

        QMap<int, QList<int>> gen8 = {
            {810, {0}}, {811, {0}}, {812, {0}}, {813, {0}}, {814, {0}}, {815, {0}}, {816, {0}}, {817, {0}}, {818, {0}}, {819, {0}},
            {820, {0}}, {821, {0}}, {822, {0}}, {823, {0}}, {824, {0}}, {825, {0}}, {826, {0}}, {827, {0}}, {828, {0}}, {829, {0}},
            {830, {0}}, {831, {0}}, {832, {0}}, {833, {0}}, {834, {0}}, {835, {0}}, {836, {0}}, {837, {0}}, {838, {0}}, {839, {0}},
            {840, {0}}, {841, {0}}, {842, {0}}, {843, {0}}, {844, {0}}, {845, {0, 1, 2}}, {846, {0}}, {847, {0}}, {848, {0}}, {849, {0, 1}},
            {850, {0}}, {851, {0}}, {852, {0}}, {853, {0}}, {854, {0, 1}}, {855, {0, 1}}, {856, {0}}, {857, {0}}, {858, {0}}, {859, {0}},
            {860, {0}}, {861, {0}}, {862, {0}}, {863, {0}}, {864, {0}}, {865, {0}}, {866, {0}}, {867, {0}}, {868, {0}}, {869, {0, 1, 2, 3, 4, 5, 6, 7, 8}},
            {870, {0}}, {871, {0}}, {872, {0}}, {873, {0}}, {874, {0}}, {875, {0, 1}}, {876, {0, 1}}, {877, {0, 1}}, {878, {0}}, {879, {0}},
            {880, {0}}, {881, {0}}, {882, {0}}, {883, {0}}, {884, {0}}, {885, {0}}, {886, {0}}, {887, {0}}, {888, {0, 1}}, {889, {0, 1}},
            {890, {0, 1}}, {891, {0}}, {892, {0, 1}}, {893, {0, 1}}, {894, {0}}, {895, {0}}, {896, {0}}, {897, {0}}, {898, {0, 1, 2}}, {899, {0}},
            {900, {0}}, {901, {0, 1}}, {902, {0, 1}}, {903, {0}}, {904, {0}}, {905, {0, 1}},
        };

        QMap<int, QList<int>> gen9 = {
            {906, {0}}, {907, {0}}, {908, {0}}, {909, {0}}, {910, {0}}, {911, {0}}, {912, {0}}, {913, {0}}, {914, {0}}, {915, {0}},
            {916, {0, 1}}, {917, {0}}, {918, {0}}, {919, {0}}, {920, {0}}, {921, {0}}, {922, {0}}, {923, {0}}, {924, {0}}, {925, {0, 1}},
            {926, {0}}, {927, {0}}, {928, {0}}, {929, {0}}, {930, {0}}, {931, {0, 1, 2, 3}}, {932, {0}}, {933, {0}}, {934, {0}}, {935, {0}},
            {936, {0}}, {937, {0}}, {938, {0}}, {939, {0}}, {940, {0}}, {941, {0}}, {942, {0}}, {943, {0}}, {944, {0}}, {945, {0}},
            {946, {0}}, {947, {0}}, {948, {0}}, {949, {0}}, {950, {0}}, {951, {0}}, {952, {0}}, {953, {0}}, {954, {0}}, {955, {0}},
            {956, {0}}, {957, {0}}, {958, {0}}, {959, {0}}, {960, {0}}, {961, {0}}, {962, {0}}, {963, {0}}, {964, {0, 1}}, {965, {0}},
            {966, {0}}, {967, {0}}, {968, {0}}, {969, {0}}, {970, {0}}, {971, {0}}, {972, {0}}, {973, {0}}, {974, {0}}, {975, {0}},
            {976, {0}}, {977, {0}}, {978, {0, 1, 2}}, {979, {0}}, {980, {0}}, {981, {0}}, {982, {0, 1}}, {983, {0}}, {984, {0}}, {985, {0}},
            {986, {0}}, {987, {0}}, {988, {0}}, {989, {0}}, {990, {0}}, {991, {0}}, {992, {0}}, {993, {0}}, {994, {0}}, {995, {0}},
            {996, {0}}, {997, {0}}, {998, {0}}, {999, {0, 1}}, {1000, {0}}, {1001, {0}}, {1002, {0}}, {1003, {0}}, {1004, {0}}, {1005, {0}},
            {1006, {0}}, {1007, {0, 1, 2, 3, 4}}, {1008, {0, 1, 2, 3, 4}}, {1009, {0}}, {1010, {0}}, {1011, {0}}, {1012, {0, 1}}, {1013, {0, 1}}, {1014, {0}}, {1015, {0}},
            {1016, {0}}, {1017, {0, 1, 2, 3, 4, 5, 6, 7}}, {1018, {0}}, {1019, {0}}, {1020, {0}}, {1021, {0}}, {1022, {0}}, {1023, {0}}, {1024, {0, 1, 2}}, {1025, {0}},
        };


        QMap<int, QList<int>> stage1 = {
            {1, {0}}, {4, {0}}, {7, {0}}, {10, {0}}, {13, {0}}, {16, {0}}, {19, {0, 1}}, {21, {0}}, {23, {0}}, {27, {0, 1}},
            {29, {0}}, {32, {0}}, {37, {0, 1}}, {41, {0}}, {43, {0}}, {46, {0}}, {48, {0}}, {50, {0, 1}}, {52, {0, 1, 2}}, {54, {0}},
            {56, {0}}, {58, {0, 1}}, {60, {0}}, {63, {0}}, {66, {0}}, {69, {0}}, {72, {0}}, {74, {0, 1}}, {77, {0, 1}}, {79, {0, 1}},
            {81, {0}}, {83, {0, 1}}, {84, {0}}, {86, {0}}, {88, {0, 1}}, {90, {0}}, {92, {0}}, {95, {0}}, {96, {0}}, {98, {0}},
            {100, {0, 1}}, {102, {0}}, {104, {0}}, {108, {0}}, {109, {0}}, {111, {0}}, {114, {0}}, {116, {0}}, {118, {0}}, {120, {0}},
            {123, {0}}, {129, {0}}, {133, {0, 1}}, {137, {0}}, {138, {0}}, {140, {0}}, {147, {0}}, {152, {0}}, {155, {0}}, {158, {0}},
            {161, {0}}, {163, {0}}, {165, {0}}, {167, {0}}, {170, {0}}, {172, {0}}, {173, {0}}, {174, {0}}, {175, {0}}, {177, {0}},
            {179, {0}}, {187, {0}}, {190, {0}}, {191, {0}}, {193, {0}}, {194, {0, 1}}, {198, {0}}, {200, {0}}, {203, {0}}, {204, {0}},
            {206, {0}}, {207, {0}}, {209, {0}}, {211, {0, 1}}, {215, {0, 1}}, {216, {0}}, {218, {0}}, {220, {0}}, {222, {0, 1}}, {223, {0}},
            {228, {0}}, {231, {0}}, {234, {0}}, {236, {0}}, {238, {0}}, {239, {0}}, {240, {0}}, {246, {0}}, {252, {0}}, {255, {0}},
            {258, {0}}, {261, {0}}, {262, {0}}, {263, {0, 1}}, {265, {0}}, {270, {0}}, {273, {0}}, {276, {0}}, {278, {0}}, {280, {0}},
            {283, {0}}, {285, {0}}, {287, {0}}, {290, {0}}, {293, {0}}, {296, {0}}, {298, {0}}, {299, {0}}, {300, {0}}, {304, {0}},
            {307, {0}}, {309, {0}}, {316, {0}}, {318, {0}}, {320, {0}}, {322, {0}}, {325, {0}}, {328, {0}}, {331, {0}}, {333, {0}},
            {339, {0}}, {341, {0}}, {343, {0}}, {345, {0}}, {347, {0}}, {349, {0}}, {353, {0}}, {355, {0}}, {360, {0}}, {361, {0}},
            {363, {0}}, {366, {0}}, {371, {0}}, {374, {0}}, {387, {0}}, {390, {0}}, {393, {0}}, {396, {0}}, {399, {0}}, {401, {0}},
            {403, {0}}, {406, {0}}, {408, {0}}, {410, {0}}, {412, {0, 1, 2}}, {415, {0}}, {418, {0}}, {420, {0}}, {422, {0, 1}}, {425, {0}},
            {427, {0}}, {431, {0}}, {433, {0}}, {434, {0}}, {436, {0}}, {438, {0}}, {439, {0}}, {440, {0}}, {443, {0}}, {446, {0}},
            {447, {0}}, {449, {0}}, {451, {0}}, {453, {0}}, {456, {0}}, {458, {0}}, {459, {0}}, {495, {0}}, {498, {0}}, {501, {0}},
            {504, {0}}, {506, {0}}, {509, {0}}, {511, {0}}, {513, {0}}, {515, {0}}, {517, {0}}, {519, {0}}, {522, {0}}, {524, {0}},
            {527, {0}}, {529, {0}}, {532, {0}}, {535, {0}}, {540, {0}}, {543, {0}}, {546, {0}}, {548, {0}}, {550, {0, 1, 2}}, {551, {0}},
            {554, {0, 1}}, {557, {0}}, {559, {0}}, {562, {0, 1}}, {564, {0}}, {566, {0}}, {568, {0}}, {570, {0, 1}}, {572, {0}}, {574, {0}},
            {577, {0}}, {580, {0}}, {582, {0}}, {585, {0, 1, 2, 3}}, {588, {0}}, {590, {0}}, {592, {0}}, {595, {0}}, {597, {0}}, {599, {0}},
            {602, {0}}, {605, {0}}, {607, {0}}, {610, {0}}, {613, {0}}, {616, {0}}, {619, {0}}, {622, {0}}, {624, {0}}, {627, {0}},
            {629, {0}}, {633, {0}}, {636, {0}}, {650, {0}}, {653, {0}}, {656, {0}}, {659, {0}}, {661, {0}},
            {664, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}}, {667, {0}},
            {669, {0, 1, 2, 3, 4}}, {672, {0}}, {674, {0}}, {677, {0}}, {679, {0}}, {682, {0}}, {684, {0}}, {686, {0}}, {688, {0}}, {690, {0}},
            {692, {0}}, {694, {0}}, {696, {0}}, {698, {0}}, {704, {0}}, {708, {0}}, {710, {0, 1, 2, 3}}, {712, {0}}, {714, {0}}, {722, {0}},
            {725, {0}}, {728, {0}}, {731, {0}}, {734, {0}}, {736, {0}}, {739, {0}}, {742, {0}}, {744, {0, 1}}, {747, {0}}, {749, {0}},
            {751, {0}}, {753, {0}}, {755, {0}}, {757, {0}}, {759, {0}}, {761, {0}}, {767, {0}}, {769, {0}}, {772, {0}}, {782, {0}},
            {789, {0}}, {803, {0}}, {808, {0}}, {810, {0}}, {813, {0}}, {816, {0}}, {819, {0}}, {821, {0}}, {824, {0}}, {827, {0}},
            {829, {0}}, {831, {0}}, {833, {0}}, {835, {0}}, {837, {0}}, {840, {0}}, {843, {0}}, {846, {0}}, {848, {0}}, {850, {0}},
            {852, {0}}, {854, {0, 1}}, {856, {0}}, {859, {0}}, {868, {0}}, {872, {0}}, {878, {0}}, {884, {0}}, {885, {0}}, {891, {0}},
            {906, {0}}, {909, {0}}, {912, {0}}, {915, {0}}, {917, {0}}, {919, {0}}, {921, {0}}, {924, {0}}, {926, {0}}, {928, {0}},
            {932, {0}}, {935, {0}}, {938, {0}}, {940, {0}}, {942, {0}}, {944, {0}}, {946, {0}}, {948, {0}}, {951, {0}}, {953, {0}},
            {955, {0}}, {957, {0}}, {960, {0}}, {963, {0}}, {965, {0}}, {969, {0}}, {971, {0}}, {974, {0}}, {996, {0}}, {999, {0, 1}},
            {1012, {0, 1}},
        };

        QMap<int, QList<int>> stage2 = {
            {2, {0}}, {5, {0}}, {8, {0}}, {11, {0}}, {14, {0}}, {17, {0}}, {25, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}}, {30, {0}}, {33, {0}}, {35, {0}},
            {39, {0}}, {42, {0}}, {44, {0}}, {57, {0}}, {61, {0}}, {64, {0}}, {67, {0}}, {70, {0}}, {75, {0, 1}}, {82, {0}},
            {93, {0}}, {112, {0}}, {113, {0}}, {117, {0}}, {122, {0, 1}}, {125, {0}}, {126, {0}}, {148, {0}}, {153, {0}}, {156, {0}},
            {159, {0}}, {176, {0}}, {180, {0}}, {183, {0}}, {188, {0}}, {217, {0}}, {221, {0}}, {233, {0}}, {247, {0}}, {253, {0}},
            {256, {0}}, {259, {0}}, {264, {1}}, {266, {0}}, {268, {0}}, {271, {0}}, {274, {0}}, {281, {0}}, {288, {0}}, {294, {0}},
            {305, {0}}, {315, {0}}, {329, {0}}, {356, {0}}, {364, {0}}, {372, {0}}, {375, {0}}, {388, {0}}, {391, {0}}, {394, {0}},
            {397, {0}}, {404, {0}}, {444, {0}}, {496, {0}}, {499, {0}}, {502, {0}}, {507, {0}}, {520, {0}}, {525, {0}}, {533, {0}},
            {536, {0}}, {541, {0}}, {544, {0}}, {552, {0}}, {575, {0}}, {578, {0}}, {583, {0}}, {600, {0}}, {603, {0}}, {608, {0}},
            {611, {0}}, {625, {0}}, {634, {0}}, {651, {0}}, {654, {0}}, {657, {0}}, {662, {0}}, {665, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}},
            {670, {0, 1, 2, 3, 4, 5}}, {680, {0}},
            {705, {0, 1}}, {723, {0}}, {726, {0}}, {729, {0}}, {732, {0}}, {737, {0}}, {762, {0}}, {783, {0}}, {790, {0}}, {811, {0}},
            {814, {0}}, {817, {0}}, {822, {0}}, {825, {0}}, {838, {0}}, {857, {0}}, {860, {0}}, {886, {0}}, {907, {0}}, {910, {0}},
            {913, {0}}, {922, {0}}, {929, {0}}, {933, {0}}, {958, {0}}, {997, {0}}, {1011, {0}},
        };

        QMap<int, QList<int>> stage3 = {
            {3, {0, 1}}, {6, {0, 1, 2}}, {9, {0, 1}}, {12, {0}}, {15, {0, 1}}, {18, {0, 1}}, {20, {0, 1}}, {22, {0}}, {24, {0}}, {26, {0, 1}},
            {28, {0, 1}}, {31, {0}}, {34, {0}}, {36, {0}}, {38, {0, 1}}, {40, {0}}, {45, {0}}, {47, {0}}, {49, {0}}, {51, {0, 1}},
            {53, {0, 1}}, {55, {0}}, {59, {0, 1}}, {62, {0}}, {65, {0, 1}}, {68, {0}}, {71, {0}}, {73, {0}}, {76, {0, 1}}, {78, {0, 1}},
            {80, {0, 1, 2}}, {85, {0}}, {87, {0}}, {89, {0, 1}}, {91, {0}}, {94, {0, 1}}, {97, {0}}, {99, {0}}, {101, {0, 1}}, {103, {0, 1}},
            {105, {0, 1}}, {106, {0}}, {107, {0}}, {110, {0, 1}}, {119, {0}}, {121, {0}}, {124, {0}}, {130, {0, 1}}, {134, {0}}, {135, {0}},
            {136, {0}}, {139, {0}}, {141, {0}}, {143, {0}}, {149, {0}},
            {154, {0}}, {157, {0, 1}}, {160, {0}}, {162, {0}}, {164, {0}}, {166, {0}}, {168, {0}}, {169, {0}}, {171, {0}}, {178, {0}},
            {181, {0, 1}}, {182, {0}}, {184, {0}}, {185, {0}}, {186, {0}}, {189, {0}}, {192, {0}}, {195, {0}}, {196, {0}}, {197, {0}},
            {199, {0, 1}}, {202, {0}}, {205, {0}}, {208, {0, 1}}, {210, {0}}, {212, {0, 1}}, {219, {0}}, {224, {0}}, {226, {0}}, {229, {0, 1}},
            {230, {0}}, {232, {0}}, {237, {0}}, {242, {0}}, {248, {0, 1}},
            {254, {0, 1}}, {257, {0, 1}}, {260, {0, 1}}, {264, {0}}, {267, {0}}, {269, {0}}, {272, {0}}, {275, {0}}, {277, {0}},
            {279, {0}}, {282, {0, 1}}, {284, {0}}, {286, {0}}, {289, {0}}, {291, {0}}, {292, {0}}, {295, {0}}, {297, {0}}, {301, {0}},
            {306, {0, 1}}, {308, {0, 1}}, {310, {0, 1}}, {317, {0}}, {319, {0, 1}}, {321, {0}}, {323, {0, 1}}, {326, {0}}, {330, {0}}, {332, {0}},
            {334, {0, 1}}, {340, {0}}, {342, {0}}, {344, {0}}, {346, {0}}, {348, {0}}, {350, {0}}, {354, {0, 1}}, {358, {0}}, {362, {0, 1}},
            {365, {0}}, {367, {0}}, {368, {0}}, {373, {0, 1}}, {376, {0, 1}},
            {389, {0}}, {392, {0}}, {395, {0}}, {398, {0}}, {400, {0}},
            {402, {0}}, {405, {0}}, {407, {0}}, {409, {0}}, {411, {0}}, {413, {0, 1, 2}}, {414, {0, 1, 2}}, {416, {0}}, {419, {0}}, {421, {0, 1}},
            {423, {0, 1}}, {424, {0}}, {426, {0}}, {428, {0, 1}}, {429, {0}}, {430, {0}}, {432, {0}}, {435, {0}}, {437, {0}}, {445, {0, 1}},
            {448, {0, 1}}, {450, {0}}, {452, {0}}, {454, {0}}, {457, {0}}, {460, {0, 1}}, {461, {0}}, {462, {0}}, {463, {0}}, {464, {0}},
            {465, {0}}, {466, {0}}, {467, {0}}, {468, {0}}, {469, {0}}, {470, {0}}, {471, {0}}, {472, {0}}, {473, {0}}, {474, {0}},
            {475, {0, 1}}, {476, {0}}, {477, {0}}, {478, {0}}, {479, {0, 1, 2, 3, 4, 5}},
            {497, {0}}, {500, {0}}, {503, {0, 1}}, {505, {0}}, {508, {0}}, {510, {0}}, {512, {0}}, {514, {0}}, {516, {0}}, {518, {0}},
            {521, {0}}, {523, {0}}, {526, {0}}, {528, {0}}, {530, {0}}, {534, {0}}, {537, {0}}, {542, {0}}, {545, {0}}, {547, {0}},
            {549, {0, 1}}, {553, {0}}, {555, {0, 1, 2, 3}}, {558, {0}}, {560, {0}}, {563, {0}}, {565, {0}}, {567, {0}}, {569, {0}}, {571, {0, 1}},
            {573, {0}}, {576, {0}}, {579, {0}}, {581, {0}}, {584, {0}}, {586, {0, 1, 2, 3}}, {589, {0}}, {591, {0}}, {593, {0}}, {596, {0}},
            {598, {0}}, {601, {0}}, {604, {0}}, {606, {0}}, {609, {0}}, {612, {0}}, {614, {0}}, {617, {0}}, {620, {0}}, {623, {0}},
            {628, {0, 1}}, {630, {0}}, {635, {0}}, {637, {0}},
            {652, {0}}, {655, {0}}, {658, {0, 1, 2}}, {660, {0}},
            {663, {0}}, {666, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}}, {668, {0}}, {671, {0, 1, 2, 3, 4}}, {673, {0}}, {675, {0}}, {678, {0, 1}}, {681, {0, 1}}, {683, {0}}, {685, {0}},
            {687, {0}}, {689, {0}}, {691, {0}}, {693, {0}}, {695, {0}}, {697, {0}}, {699, {0}}, {700, {0}}, {706, {0, 1}}, {709, {0}},
            {711, {0, 1, 2, 3}}, {713, {0, 1}}, {715, {0}}, {724, {0, 1}},
            {727, {0}}, {730, {0}}, {733, {0}}, {735, {0}}, {738, {0}}, {740, {0}}, {743, {0}}, {745, {0, 1, 2}}, {748, {0}}, {750, {0}},
            {752, {0}}, {754, {0}}, {756, {0}}, {758, {0}}, {760, {0}}, {763, {0}}, {768, {0}}, {784, {0}},
            {812, {0}}, {815, {0}}, {818, {0}}, {820, {0}}, {823, {0}}, {826, {0}}, {828, {0}}, {830, {0}}, {832, {0}},
            {834, {0}}, {836, {0}}, {839, {0}}, {841, {0}}, {842, {0}}, {844, {0}}, {847, {0}}, {849, {0, 1}}, {851, {0}}, {853, {0}},
            {855, {0, 1}}, {858, {0}}, {861, {0}}, {862, {0}}, {863, {0}}, {864, {0}}, {865, {0}}, {866, {0}}, {867, {0}}, {869, {0, 1, 2, 3, 4, 5, 6, 7, 8}},
            {873, {0}}, {879, {0}}, {887, {0}},
            {899, {0}}, {900, {0}}, {901, {0, 1}}, {902, {0, 1}}, {903, {0}}, {904, {0}},
            {908, {0}}, {911, {0}}, {914, {0}}, {916, {0, 1}}, {918, {0}}, {920, {0}}, {923, {0}}, {925, {0, 1}}, {927, {0}}, {930, {0}},
            {934, {0}}, {936, {0}}, {937, {0}}, {939, {0}}, {941, {0}}, {943, {0}}, {945, {0}}, {947, {0}}, {949, {0}}, {952, {0}},
            {954, {0}}, {956, {0}}, {959, {0}}, {961, {0}}, {964, {0, 1}}, {966, {0}}, {970, {0}}, {972, {0}}, {975, {0}}, {979, {0}},
            {980, {0}}, {981, {0}}, {982, {0, 1}}, {983, {0}}, {998, {0}}, {1000, {0}}, {1013, {0, 1}}, {1018, {0}}, {1019, {0}},
        };

        QMap<int, QList<int>> singleStage = {
            {115, {0, 1}}, {127, {0, 1}}, {128, {0, 1, 2, 3}}, {131, {0}}, {132, {0}}, {142, {0, 1}}, {201, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}}, {213, {0}}, {214, {0, 1}}, {225, {0}},
            {227, {0}}, {235, {0}}, {241, {0}}, {302, {0, 1}}, {303, {0, 1}}, {311, {0}}, {312, {0}}, {313, {0}}, {314, {0}}, {324, {0}},
            {327, {0}}, {335, {0}}, {336, {0}}, {337, {0}}, {338, {0}}, {351, {0, 1, 2, 3}}, {352, {0}}, {357, {0}}, {359, {0, 1}}, {369, {0}},
            {370, {0}}, {417, {0}}, {441, {0}}, {442, {0}}, {455, {0}}, {531, {0, 1}}, {538, {0}}, {539, {0}}, {556, {0}}, {561, {0}},
            {587, {0}}, {594, {0}}, {615, {0}}, {618, {0, 1}}, {621, {0}}, {626, {0}}, {631, {0}}, {632, {0}}, {676, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}}, {701, {0}},
            {702, {0}}, {703, {0}}, {707, {0}}, {741, {0, 1, 2, 3}}, {746, {0, 1}}, {764, {0}}, {765, {0}}, {766, {0}}, {771, {0}}, {774, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}},
            {775, {0}}, {776, {0}}, {777, {0}}, {778, {0, 1}}, {779, {0}}, {780, {0}}, {781, {0}}, {845, {0, 1, 2}}, {870, {0}}, {871, {0}},
            {874, {0}}, {875, {0, 1}}, {876, {0, 1}}, {877, {0, 1}}, {880, {0}}, {881, {0}}, {882, {0}}, {883, {0}}, {931, {0, 1, 2, 3}}, {950, {0}},
            {962, {0}}, {967, {0}}, {968, {0}}, {973, {0}}, {976, {0}}, {977, {0}}, {978, {0, 1, 2}},
        };

        // Currently only in Personals as it is unsure if it will come back in future pokemon games
        // If it does - it won't change much in the code
        // List obtained from serebii: https://www.serebii.net/scarletviolet/swim.shtml#fly
        //                             https://www.serebii.net/scarletviolet/swim.shtml#swim

        QMap<int, QList<int>> pokemonFly = {
            {6, {0}}, {26, {1}}, {39, {0}}, {40, {0}}, {49, {0}}, {70, {0}}, {71, {0}}, {74, {0, 1}}, {81, {0}},
            {82, {0}}, {92, {0}}, {93, {0}}, {94, {0}}, {109, {0}}, {110, {0, 1}}, {123, {0}}, {137, {0}},
            {144, {0, 1}}, {145, {0}}, {146, {0, 1}}, {149, {0}}, {150, {0}}, {151, {0}}, // End of Gen 1
            {163, {0}}, {164, {0}}, {174, {0}}, {182, {0}}, {187, {0}}, {188, {0}}, {189, {0}}, {193, {0}},
            {198, {0}}, {200, {0}}, {205, {0}}, {207, {0}}, {214, {0}}, {225, {0}}, {227, {0}}, {233, {0}}, {250, {0}}, // End of Gen 2
            {278, {0}}, {279, {0}}, {284, {0}}, {313, {0}}, {314, {0}}, {329, {0}}, {330, {0}}, {333, {0}}, {334, {0}},
            {353, {0}}, {355, {0}}, {357, {0}}, {358, {0}}, {362, {0}}, {373, {0}}, {374, {0}}, {375, {0}}, {376, {0}},
            {380, {0}}, {381, {0}}, {384, {0}}, {385, {0}}, {386, {0, 1, 2, 3}}, // End of Gen 3
            {396, {0}}, {397, {0}}, {398, {0}}, {402, {0}}, {415, {0}}, {416, {0}}, {425, {0}}, {426, {0}}, {429, {0}},
            {430, {0}}, {433, {0}}, {436, {0}}, {437, {0}}, {462, {0}}, {469, {0}}, {472, {0}}, {474, {0}}, {476, {0}},
            {477, {0}}, {478, {0}}, {479, {0, 1, 2, 3, 4, 5}}, {480, {0}}, {481, {0}}, {482, {0}}, {483, {0, 1}},
            {484, {0, 1}}, {487, {0, 1}}, {488, {0}}, {491, {0}}, {492, {1}}, {493, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}}, // End of Gen 4
            {546, {0}}, {547, {0}}, {577, {0}}, {578, {0}}, {579, {0}}, {608, {0}}, {609, {0}}, {615, {0}}, {627, {0}},
            {628, {0, 1}}, {630, {0}}, {635, {0}}, {637, {0}}, {641, {0, 1}}, {642, {0, 1}}, {643, {0}}, {644, {0}},
            {645, {0, 1}}, {646, {1, 2}}, {648, {0}}, // End of Gen 5
            {661, {0}}, {662, {0}}, {663, {0}}, {666, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}},
            {669, {0}}, {670, {0}}, {671, {0}}, {686, {0}}, {687, {0}}, {701, {0}}, {703, {0}}, {707, {0}}, {708, {0}},
            {714, {0}}, {715, {0}}, {719, {0}}, {720, {0, 1}}, // End of Gen 6
            {722, {0}}, {723, {0}}, {724, {0, 1}}, {731, {0}}, {732, {0}}, {733, {0}}, {738, {0}}, {741, {0, 1, 2, 3}},
            {742, {0}}, {743, {0}}, {764, {0}}, {774, {0}}, {789, {0}}, {790, {0}}, {791, {0}}, {792, {0}}, {800, {0, 1, 2}}, // End of Gen 7
            {821, {0}}, {822, {0}}, {823, {0}}, {841, {0}}, {854, {0, 1}}, {855, {0, 1}}, {868, {0}}, {873, {0}}, {885, {0}},
            {886, {0}}, {887, {0}}, {890, {0}}, {895, {0}},{898, {0}}, {905, {0, 1}}, // End of Gen 8
            {931, {0, 1, 2, 3}}, {938, {0}}, {940, {0}}, {941, {0}}, {954, {0}}, {955, {0}}, {962, {0}}, {965, {0}},
            {966, {0}}, {969, {0}}, {970, {0}}, {973, {0}}, {985, {0}}, {987, {0}}, {993, {0}}, {994, {0}},
            {1004, {0}}, {1005, {0}}, {1008, {0}}, {1012, {0}}, {1013, {0}}, {1016, {0}}, {1025, {0}}, // End of Gen 9
        };

        QMap<int, QList<int>> pokemonSwim = {
            {7, {0}}, {8, {0}}, {9, {0}}, {25, {0, 1, 2, 3, 4, 5, 6, 7, 9}}, {26, {0}}, {54, {0}},
            {55, {0}}, {60, {0}}, {61, {0}}, {62, {0}}, {72, {0}}, {73, {0}}, {79, {0, 1}}, {80, {1, 2}},
            {86, {0}}, {87, {0}}, {90, {0}}, {91, {0}}, {116, {0}}, {117, {0}}, {128, {3}}, {129, {0}},
            {130, {0}}, {131, {0}}, {133, {0}}, {134, {0}}, {135, {0}}, {147, {0}}, {148, {3}}, // End of Gen 1
            {158, {0}}, {159, {0}}, {160, {0}}, {170, {0}}, {171, {0}}, {172, {0}}, {183, {0}}, {184, {0}},
            {186, {0}}, {194, {0, 1}}, {195, {0}}, {196, {0}}, {197, {0}}, {199, {0, 1}}, {211, {0, 1}}, {230, {0}},
            {245, {0}}, {249, {0}}, // End of Gen 2
            {258, {0}}, {259, {0}}, {260, {0}}, {270, {0}}, {271, {0}}, {272, {0}}, {283, {0}}, {298, {0}},
            {339, {0}}, {340, {0}}, {341, {0}}, {342, {0}}, {349, {0}}, {350, {0}}, {370, {0}}, {382, {0}}, // End of Gen 3
            {393, {0}}, {394, {0}}, {395, {0}}, {418, {0}}, {419, {0}}, {456, {0}}, {457, {0}}, {470, {0}},
            {471, {0}}, {489, {0}}, {490, {0}}, // End of Gen 4
            {501, {0}}, {502, {0}}, {503, {0, 1}}, {550, {0, 1, 2}}, {580, {0}}, {581, {0}}, {594, {0}}, {602, {0}},
            {603, {0}}, {604, {0}}, {647, {0, 1}}, // End of Gen 5
            {656, {0}}, {657, {0}}, {658, {0, 1}}, {690, {0}}, {691, {0}}, {692, {0}}, {693, {0}}, {700, {0}},
            {712, {0}}, {713, {0, 1}}, // End of Gen 6
            {728, {0}}, {729, {0}}, {730, {0}}, {747, {0}}, {748, {0}}, {751, {0}}, {752, {0}}, {779, {0}}, // End of Gen 7
            {816, {0}}, {817, {0}}, {818, {0}}, {833, {0}}, {834, {0}}, {845, {0, 1, 2}}, {846, {0}}, {847, {0}},
            {875, {0, 1}}, {902, {0, 1}}, {904, {0}}, // End of Gen 8
            {912, {0}}, {913, {0}}, {914, {0}}, {921, {0}}, {922, {0}}, {923, {0}}, {963, {0}}, {964, {0, 1}},
            {976, {0}}, {977, {0}}, {978, {0, 1, 2}}, {980, {0}}, {1000, {0}}, {1007, {0}}, {1009, {0}}, // End of Gen 9
        };

        // Functions
        inline int getPokemonItemValue(int pokemon, int form);
        inline std::string getPokemonItemId(int pokemon, int form);
        inline std::string selectTeraTypes(int pokemon, int form);
        inline void createFolderHierarchy(const QString& folder);
        inline json readJsonQFile(const QString& filePath);
        inline QMap<int, QList<int>> mergeQMaps(const QMap<int, QList<int>>& existingMap,
                                         const QMap<int, QList<int>>& secondaryMap,
                                         const QMap<int, QList<int>>& thirdMap);
        inline QMap<int, QList<int>> removeValuesFromQMap(
            const QMap<int, QList<int>>& initialMap,
            const QMap<int, QList<int>>& mapToRemove);

        inline bool allowedToLearnMove(int move, int pokemon, int form);
        inline bool allowedTMMove(int move);

        // Virtual Functions
        virtual void recursiveFindOfPokemonSceneTable(json& sceneFile, QVector<int> devId, QVector<int> formId, QVector<int> gender, QVector<bool> rare) = 0;
        virtual void modifyPokemonScene(QVector<int> devId, QVector<int> formId, QVector<int> gender, QVector<bool> rare, QString input, QString output) = 0;
        virtual bool getAllowedPokemon(allowedPokemonLimiter limiter, QMap<int, QList<int>>& allowedList, QString check) = 0;
        virtual void randomizePokemon(QMap<int, QList<int>>& allowedPokemon, int& devid, int& form, int& gender, bool& rare, int shinyrate, json& changedFile) = 0;
        virtual void randomizePokemonMoves() = 0;

        // Variables
        QList<int> pokemon_with_regional_evolutions = {
            25,   // Pikachu [1]
            102,  // Exeggcute [1]
            104,  // Cubone [1]
            109,  // Koffing [1]
            156,  // Quilava [1]
            439,  // Mime Jr. [1]
            123,  // Scyther [1]
            217,  // Ursaring [0] [1]
            234,  // Stantler [1]
            502,  // Dewott [1]
            548,  // Petilil [1]
            627,  // Rufflet [1]
            704,  // Goomy [1]
            712,  // Bergmite [1]
            723,  // Dartrix [1]
        };

        QList<int> pokemon_with_multiplayer_evolutions = {
            61,   // Poliwhirl [1]
            64,   // Kadabra [0]
            67,   // Machoke [0]
            75,   // Graveler [0]
            79,   // Slowpoke [1]
            93,   // Haunter [0]
            95,   // Onix [0]
            117,  // Seadra [0]
            123,  // Scyther [0]
            137,  // Porygon [0]
            366,  // Clamperl [0] [1]
            112,  // Rhydon [0]
            125,  // Electabuzz [0]
            126,  // Magma [0]
            233,  // Porygon2 [0]
            356,  // Dusclops [0]
            349,  // Feebas [0]
            525,  // Boldore [0]
            533,  // Gurdurr [0]
            588,  // Karrablast [0]
            616,  // SHelmet [0]
            682,  // Spritzee [0]
            684,  // Swirlix [0]
            708,  // Phantump [0]
            710,  // Pumpkaboo [0]
            933,  // Finizen [0]
        };

        QMap<QString, QStringList> nationalDexPokemonNamesAndForms;
};
#endif // SHAREDRANDOMIZERCLASS_H

/*
 * This function returns the json object of the passed in file
 */

inline json sharedRandomizerClass::readJsonQFile(const QString& filePath){
    QFile file(filePath);

    if (!file.open(QIODevice::ReadOnly | QIODevice::Text)) {
        qFatal() << "Could not open file:" << filePath;
    }

    QTextStream in(&file);
    QString fileContent = in.readAll();  // Read entire file into a QString
    file.close();  // Close file after reading

    // Convert QString to std::string and parse JSON
    try {
        return json::parse(fileContent.toStdString());
    } catch (const json::parse_error& e) {
        qFatal() << "JSON parsing error:" << e.what();
    }

    return json();  // Return empty JSON object in case of failure
}

/*
 * This function creates the folder hierarchy needed for the project
 */
inline void sharedRandomizerClass::createFolderHierarchy(const QString& folder) {
    try {
        // Convert to absolute path
        QDir absolutePath = QDir(folder).absolutePath();
        qDebug() << "Absolute path:" << absolutePath.path();

        // Create directories
        if (!absolutePath.exists()) {
            if (!absolutePath.mkpath(".")) {
                qCritical() << "Failed to create directories for:" << absolutePath.path();
                return;
            }
        }
        qDebug() << "Created path:" << absolutePath.path();

        // Define where to start (example folder)
        QString startFolder = "output";
        bool startSettingPermissions = false;
        QDir currentPath;

        QStringList pathParts = absolutePath.path().split("/", Qt::SkipEmptyParts);

        for (const QString &part : pathParts) {
            if (part == startFolder) {
                startSettingPermissions = true;
            }

            if (startSettingPermissions) {
                currentPath.setPath(currentPath.filePath(part));

                if (!QFileInfo::exists(currentPath.path())) {
                    if (!currentPath.mkpath(".")) {
                        qCritical() << "Failed to create directory:" << currentPath.path();
                        return;
                    }
                }

                QFile dirFile(currentPath.path());
                if (!dirFile.setPermissions(QFile::ReadOwner | QFile::WriteOwner | QFile::ExeOwner |
                                            QFile::ReadGroup | QFile::WriteGroup | QFile::ExeGroup |
                                            QFile::ReadOther | QFile::WriteOther | QFile::ExeOther)) {
                    qCritical() << "Failed to set permissions for:" << currentPath.path();
                } else {
                    qDebug() << "Set permissions for:" << currentPath.path();
                }
            }
        }
    } catch (...) {
        qCritical() << "Error creating folder hierarchy";
    }
}

/*
 * This function returns the item the pokemon must hold - it also checks based on form
 */
inline std::string sharedRandomizerClass::getPokemonItemId(int index, int form){
    if (paradox[index].contains(form) && index != 1007 && index != 1008 && index != 1024) {
        return "ITEMID_BUUSUTOENAJII";
    }

    switch (index) {
    case 25: return "ITEMID_DENKIDAMA";
    case 113:
    case 242: return "ITEMID_MANMARUISI";
    case 283:
    case 415: return "ITEMID_AMAIMITU";
    case 285:
    case 590:
    case 948: return "ITEMID_TIISANAKINOKO";
    case 286:
    case 591:
    case 949: return "ITEMID_TIISANAKINOKO";
    case 316: return "ITEMID_ORENNOMI";
    case 317: return "ITEMID_OBONNOMI";
    case 440: return "ITEMID_MANMARUISI";
    case 625: return "ITEMID_KASIRANOAKASI";
    case 734: return "ITEMID_MOMONNOMI";
    case 739: return "ITEMID_NANASINOMI";
    case 740: return "ITEMID_KURABONOMI";
    case 741: return "ITEMID_YAMABUKINOMITU";
    case 778: return "ITEMID_KAGONOMI";
    case 819: return "ITEMID_ORENNOMI";
    case 483:
        if (form == 1) return "ITEMID_DAIKONGOUDAMA";
        break;
    case 484:
        if (form == 1) return "ITEMID_DAISIRATAMA";
        break;
    case 487:
        if (form == 1) return "ITEMID_DAIHAKKINDAMA";
        break;
    case 493:
        switch (form) {
        case 1: return "ITEMID_KOBUSINOPUREETO";
        case 2: return "ITEMID_AOZORAPUREETO";
        case 3: return "ITEMID_MOUDOKUPUREETO";
        case 4: return "ITEMID_DAITINOPUREETO";
        case 5: return "ITEMID_GANSEKIPUREETO";
        case 6: return "ITEMID_TAMAMUSIPUREETO";
        case 7: return "ITEMID_MONONOKEPUREETO";
        case 8: return "ITEMID_KOUTETUPUREETO";
        case 9: return "ITEMID_HINOTAMAPUREETO";
        case 10: return "ITEMID_SIZUKUPUREETO";
        case 11: return "ITEMID_MIDORINOPUREETO";
        case 12: return "ITEMID_IKAZUTIPUREETO";
        case 13: return "ITEMID_HUSIGINOPUREETO";
        case 14: return "ITEMID_TURARANOPUREETO";
        case 15: return "ITEMID_RYUUNOPUREETO";
        case 16: return "ITEMID_KOWAMOTEPUREETO";
        case 17: return "ITEMID_SEIREIPUREETO";
        }
        break;
    case 888:
        if (form == 1) return "ITEMID_KUTITATURUGI";
        break;
    case 889:
        if (form == 1) return "ITEMID_KUTITATATE";
        break;
    case 1017:
        switch (form) {
        case 1: return "ITEMID_IDONOMEN";
        case 2: return "ITEMID_KAMADONOMEN";
        case 3: return "ITEMID_ISHIDUENOMEN";
        }
        break;
    }
    return "ITEMID_NONE";
}

/*
 * This function returns the percentage of the item the pokemon must hold - it also checks based on form
 */
inline int sharedRandomizerClass::getPokemonItemValue(int index, int form){
    if (paradox.contains(index) && index != 1007 && index != 1008 && index != 1024) {
        return 25;
    }

    switch (index) {
    case 25: return 5;
    case 113:
    case 242: return 30;
    case 283:
    case 415: return 5;
    case 285:
    case 590:
    case 948: return 5;
    case 286:
    case 591:
    case 949: return 30;
    case 316: return 30;
    case 317: return 5;
    case 440: return 5;
    case 625: return 100;
    case 734: return 5;
    case 739: return 5;
    case 740: return 5;
    case 741: return 5;
    case 778: return 5;
    case 819: return 5;
    case 483:
        if (form == 1) return 100;
        break;
    case 484:
        if (form == 1) return 100;
        break;
    case 487:
        if (form == 1) return 100;
        break;
    case 493:
        switch (form) {
        case 1: case 2: case 3: case 4: case 5:
        case 6: case 7: case 8: case 9: case 10:
        case 11: case 12: case 13: case 14: case 15:
        case 16: case 17: return 100;
        }
        break;
    case 888:
        if (form == 1) return 100;
        break;
    case 889:
        if (form == 1) return 100;
        break;
    case 1017:
        switch (form) {
        case 1: case 2: case 3: return 100;
        }
        break;
    }
    return 0;
}

/*
 * This function returns the specific tera type a pokemon need; otherwise it will return
 * a value to get it randomnly on child object (to use the seed they have)
 */
inline std::string sharedRandomizerClass::selectTeraTypes(int pokemon, int formId){

    switch(pokemon){
    case 1017:
        switch(formId){
        case 0:
            return "KUSA";
        case 1:
            return "MIZU";
        case 2:
            return "HONOO";
        case 3:
            return "IWA";
        }
        break;
    case 1024:
        return "NIJI";
    default:
        break;
    }

    return "NONE";
}

/*
 * This creates a new mergedMap for the allowed pokemon listing checks
 */
inline QMap<int, QList<int>> sharedRandomizerClass::mergeQMaps(const QMap<int, QList<int>>& existingMap,
                                           const QMap<int, QList<int>>& secondaryMap,
                                           const QMap<int, QList<int>>& thirdMap) {
    QMap<int, QList<int>> mergedMap = existingMap;  // Start with existing map

    for (auto it = secondaryMap.begin(); it != secondaryMap.end(); ++it) {
        int key = it.key();
        QList<int> values = it.value();

        // If the key is in the third map, filter out values found in the third map
        if (thirdMap.contains(key)) {
            // Get the values in the third map for this key
            QList<int> thirdMapValues = thirdMap[key];

            // Remove any values from the secondary map that are also in the third map
            for (int value : thirdMapValues) {
                values.removeAll(value);  // Removes all occurrences of 'value' in 'values'
            }
        }

        // If the values list is not empty, proceed with merging
        if (!values.isEmpty()) {
            // If the key exists in the existing map, merge the values (no duplicates)
            if (mergedMap.contains(key)) {
                for (int value : values) {
                    if (!mergedMap[key].contains(value)) {
                        mergedMap[key].append(value);
                    }
                }
            } else {
                // If the key doesn't exist in the merged map, insert the secondary values
                mergedMap.insert(key, values);
            }
        }
    }

    return mergedMap;
}

inline QMap<int, QList<int>> sharedRandomizerClass::removeValuesFromQMap(
    const QMap<int, QList<int>>& initialMap,
    const QMap<int, QList<int>>& mapToRemove) {

    QMap<int, QList<int>> resultMap = initialMap;  // Start with a copy of the initial map

    for (auto it = mapToRemove.begin(); it != mapToRemove.end(); ++it) {
        int key = it.key();
        const QList<int>& valuesToRemove = it.value();

        if (resultMap.contains(key)) {
            QList<int>& existingValues = resultMap[key];

            // Remove specific values found in mapToRemove
            for (int value : valuesToRemove) {
                existingValues.removeAll(value);
            }

            // If the list is empty after removals, remove the key entirely
            if (existingValues.isEmpty()) {
                resultMap.remove(key);
            }
        }
    }

    return resultMap;
}

/*
 * Checks if the pokemon can learn the specific move
 */
inline bool sharedRandomizerClass::allowedToLearnMove(int move, int pokemon, int form){
    switch(move){
    case 464:
        if(pokemon != 491){
            return false;
        }
        break;
    case 621:
        if(pokemon == 720){
            if(form !=1){
                return false;
            }
        }else{
            return false;
        }
        break;
    case 783:
        if(pokemon != 877){
            return false;
        }
        break;
    }

    return true;
}

/*
 * Checks if the move can be a TM or Not
 */
inline bool sharedRandomizerClass::allowedTMMove(int move){
    switch(move){
    case 464:
        return false;
    case 621:
        return false;
    case 783:
        return false;
    }

    return true;
}
